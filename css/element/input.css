input {
	appearance: none;
	box-sizing: inherit;
	font: inherit;

	&::-webkit-datetime-edit,
	&::-webkit-datetime-edit-fields-wrapper,
	&::-webkit-datetime-edit-text,
	&::-webkit-datetime-edit-ampm-field,
	&::-webkit-datetime-edit-day-field,
	&::-webkit-datetime-edit-hour-field,
	&::-webkit-datetime-edit-millisecond-field,
	&::-webkit-datetime-edit-minute-field,
	&::-webkit-datetime-edit-month-field,
	&::-webkit-datetime-edit-second-field,
	&::-webkit-datetime-edit-week-field,
	&::-webkit-datetime-edit-year-field,
	&::-webkit-calendar-picker-indicator {
		color: #4b4b4ba1;
	}
}

input:where(
		[type='date'],
		[type='datetime-local'],
		[type='email'],
		[type='month'],
		[type='number'],
		[type='password'],
		[type='search'],
		[type='tel'],
		[type='text'],
		[type='time'],
		[type='url'],
		[type='week']
	) {
	border: var(--input-border);
	border-radius: var(--input-border-radius);
	color: var(--text-input-color);
	height: 28px;
	padding: var(--text-input-padding-y) var(--text-input-padding-x);
}
input:where([type='button'], [type='reset'], [type='submit']) {
	background-color: var(--button-background-color);
	border: var(--input-border);
	border-radius: var(--input-border-radius);
	height: 24px;
	padding: var(--button-padding-y) var(--button-padding-x);
}
input[type='color'] {
	background-color: var(--button-background-color);
	border: var(--input-border);
	border-radius: var(--input-border-radius);
	height: 12px;
	min-width: 64px;
	padding: 8px;
	vertical-align: 0px;

	&::-webkit-color-swatch-wrapper {
		padding: 0;
		margin: 0;
		width: 100%;
		height: 100%;
	}
}

input[type='file'] {
	font: inherit;

	&::file-selector-button {
		background-color: var(--button-background-color);
		border: var(--input-border);
		border-radius: var(--input-border-radius);
		font: inherit;
		height: 32px;
	}
}

input[type='image'] {
	vertical-align: bottom;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
	height: auto;
}

[type='search']::-webkit-search-decoration {
	appearance: none;
}

input:where([type='checkbox'], [type='radio']) {
	--input-checked-dimensions: 16px;
	--input-checked-border: calc(0.125 * var(--input-checked-dimensions));
	cursor: pointer;
	width: var(--input-checked-dimensions);
	height: var(--input-checked-dimensions);
	border: var(--input-checked-border) solid gray;
	position: relative;
	overflow: clip;
	margin: 0;

	&::before {
		--input-checked-scale: 0;
		--input-checked-offset: 50%;
		--input-checked-offset-y: calc(
			var(--input-checked-offset) - (var(--input-checked-scale) * var(--input-checked-border))
		);

		display: block;
		position: absolute;
		right: 50%;
		bottom: 50%;
		transform: translate(var(--input-checked-offset), var(--input-checked-offset-y))
			scale(var(--input-checked-scale));
		transform-origin: center;
		transition: transform 0.3s;
		color: #4b4b4ba1;
	}

	&:checked::before {
		transform: translate(var(--input-checked-offset), var(--input-checked-offset-y))
			scale(var(--input-checked-scale));
	}
}

input[type='radio'] {
	border-radius: 50%;

	&:checked::before {
		--input-checked-scale: 0.6;
	}
	&::before {
		content: '⬤';
	}
}

input[type='checkbox'] {
	border-radius: var(--input-border-radius);

	&:checked {
		background-color: #4b4b4ba1;
	}

	&::before {
		content: '✔';
		font-weight: 100;
		color: #ffffffff;
		text-shadow: 1px 1px 8px #4b4b4ba1, 2px 2px 10px #f88600a1, 1px 1px 8px #48a0dfa1;
	}
	&:checked::before {
		--input-checked-scale: 0.75;
	}
}

/* 

input[type='range'] needs seperate delarations for webkit and moz vendor prefixes
grouping prefix CSS selectors together, breaks styling in ALL browsers. See Quirksmode URL below for more info.

https://www.quirksmode.org/blog/archives/2015/11/styling_and_scr.html

- "Annoyingly, you cannot combine these selectors in one rule,
  even though you usually want to give all browsers the same styles (except for margins on the thumb).
  If a browser finds one selector it doesn’t understand it ignores all of them.
  So you’ll have to repeat yourself or use a server-side CSS generator."

*/

input[type='range'] {
	--range_input--cursor: pointer;

	--range_input_thumb--appearance: none;
	--range_input_thumb--border: none;
	--range_input_thumb--box-sizing: inherit;
	--range_input_thumb--height: 16px;
	--range_input_thumb--width: 16px;
	--range_input_thumb--border-radius: 50%;

	--range_input_track--width: 100%;
	--range_input_track--height-offset-y: 1px;
	--range_input_track--height: calc(
		(var(--range_input_thumb--height) / 4) + var(--range_input_track--height-offset-y)
	);
	--range_input_track--border-radius: 3px;
}

/* input[type='range']::slider-track styles */
input[type='range']::-webkit-slider-runnable-track {
	width: var(--range_input_track--width);
	height: var(--range_input_track--height);
	background: var(--button-background-color);
	border-radius: var(--range_input_track--border-radius);
	cursor: var(--range_input--cursor);
}

input[type='range']::-moz-range-track {
	width: var(--range_input_track--width);
	height: var(--range_input_track--height);
	background: var(--button-background-color);
	border-radius: var(--range_input_track--border-radius);
	cursor: var(--range_input--cursor);
}

/* input[type='range']:active::slider-track styles */
input[type='range']:active::-webkit-slider-runnable-track {
	cursor: grabbing;
}
input[type='range']:active::-moz-range-track {
	cursor: grabbing;
}

/* input[type='range']:disabled::slider-track styles */
input[type='range']:disabled::-webkit-slider-runnable-track {
	filter: grayscale(1);
	opacity: 0.3;
	cursor: not-allowed;
}
input[type='range']:disabled::-moz-range-track {
}

/* input[type='range']::slider-thumb styles */
input[type='range']::-webkit-slider-thumb {
	appearance: var(--range_input_thumb--appearance);
	border: var(--range_input_thumb--border);
	box-sizing: var(--range_input_thumb--box-sizing);
	height: var(--range_input_thumb--height);
	width: var(--range_input_thumb--width);
	border: var(--input-border);
	border-radius: var(--range_input_thumb--border-radius);
	background-color: var(--button-background-color);

	/* Webkit specific */
	position: relative;
	bottom: calc(
		(var(--range_input_thumb--height) / 2) - (var(--range_input_track--height-offset-y) / 2)
	);
}

input[type='range']::-webkit-slider-thumb:hover {
	background-color: var(--text-input-color);
}

input[type='range']::-moz-range-thumb {
	appearance: var(--range_input_thumb--appearance) !important;
	border: var(--range_input_thumb--border);
	box-sizing: var(--range_input_thumb--box-sizing);
	height: var(--range_input_thumb--height);
	width: var(--range_input_thumb--width);
	border: var(--input-border);
	border-radius: var(--range_input_thumb--border-radius);
	background-color: var(--button-background-color);
	cursor: var(--range_input--cursor);
}
input[type='range']:active::-moz-range-thumb,
input[type='range']:active::-moz-range-progress {
	cursor: grabbing;
}

input[type='range']:disabled::-moz-range-thumb,
input[type='range']:disabled::-moz-range-progress {
	filter: grayscale(1);
	opacity: 0.3;
	cursor: not-allowed;
}

input[type='range']::-moz-range-thumb:hover {
	background-color: var(--text-input-color);
}

input[type='range']::-moz-range-progress {
	background-color: #5082e0;
}
